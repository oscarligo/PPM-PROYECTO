<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/ppm_proyecto/presentation/ui/components/BasicScreens.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/ppm_proyecto/presentation/ui/components/BasicScreens.kt" />
              <option name="updatedContent" value="package com.example.ppm_proyecto.presentation.ui.components&#10;&#10;import androidx.compose.foundation.layout.Arrangement&#10;import androidx.compose.foundation.layout.Column&#10;import androidx.compose.foundation.layout.fillMaxSize&#10;import androidx.compose.foundation.layout.fillMaxWidth&#10;import androidx.compose.foundation.layout.padding&#10;import androidx.compose.material3.Button&#10;import androidx.compose.material3.OutlinedButton&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.unit.dp&#10;&#10;@Composable&#10;fun BasicLoginScreen(&#10;    onLoginStudent: () -&gt; Unit,&#10;    onLoginTeacher: () -&gt; Unit,&#10;    onCreateAccount: () -&gt; Unit&#10;) {&#10;    Column(&#10;        modifier = Modifier.fillMaxSize().padding(24.dp),&#10;        verticalArrangement = Arrangement.Center,&#10;        horizontalAlignment = Alignment.CenterHorizontally&#10;    ) {&#10;        Text(&quot;Login&quot;)&#10;        Button(onClick = onLoginStudent, modifier = Modifier.fillMaxWidth().padding(top = 16.dp)) {&#10;            Text(&quot;Entrar como Estudiante&quot;)&#10;        }&#10;        Button(onClick = onLoginTeacher, modifier = Modifier.fillMaxWidth().padding(top = 8.dp)) {&#10;            Text(&quot;Entrar como Maestro&quot;)&#10;        }&#10;        OutlinedButton(onClick = onCreateAccount, modifier = Modifier.fillMaxWidth().padding(top = 24.dp)) {&#10;            Text(&quot;Crear cuenta&quot;)&#10;        }&#10;    }&#10;}&#10;&#10;@Composable&#10;fun BasicRegisterScreen(&#10;    onRegistered: () -&gt; Unit,&#10;    onBack: () -&gt; Unit&#10;) {&#10;    Column(&#10;        modifier = Modifier.fillMaxSize().padding(24.dp),&#10;        verticalArrangement = Arrangement.Center,&#10;        horizontalAlignment = Alignment.CenterHorizontally&#10;    ) {&#10;        Text(&quot;Registro&quot;)&#10;        Button(onClick = onRegistered, modifier = Modifier.fillMaxWidth().padding(top = 16.dp)) {&#10;            Text(&quot;Registrar y volver al Login&quot;)&#10;        }&#10;        OutlinedButton(onClick = onBack, modifier = Modifier.fillMaxWidth().padding(top = 8.dp)) {&#10;            Text(&quot;Volver&quot;)&#10;        }&#10;    }&#10;}&#10;&#10;@Composable&#10;fun BasicTeacherHomeScreen(&#10;    onOpenCourse: (String) -&gt; Unit,&#10;    onOpenProfile: () -&gt; Unit&#10;) {&#10;    Column(&#10;        modifier = Modifier.fillMaxSize().padding(24.dp),&#10;        verticalArrangement = Arrangement.spacedBy(12.dp),&#10;        horizontalAlignment = Alignment.CenterHorizontally&#10;    ) {&#10;        Text(&quot;Inicio Maestro&quot;)&#10;        Button(onClick = { onOpenCourse(&quot;COURSE_1&quot;) }) { Text(&quot;Abrir curso COURSE_1&quot;) }&#10;        Button(onClick = { onOpenProfile() }) { Text(&quot;Ir a Perfil&quot;) }&#10;    }&#10;}&#10;&#10;@Composable&#10;fun BasicCourseDetailsScreen(courseId: String, onBack: () -&gt; Unit) {&#10;    Column(&#10;        modifier = Modifier.fillMaxSize().padding(24.dp),&#10;        verticalArrangement = Arrangement.spacedBy(12.dp),&#10;        horizontalAlignment = Alignment.CenterHorizontally&#10;    ) {&#10;        Text(&quot;Detalles del curso: $courseId&quot;)&#10;        OutlinedButton(onClick = onBack) { Text(&quot;Volver&quot;) }&#10;    }&#10;}&#10;&#10;@Composable&#10;fun BasicProfileScreen(&#10;    onBack: () -&gt; Unit,&#10;    onOpenSecurity: () -&gt; Unit,&#10;    onOpenAppearance: () -&gt; Unit&#10;) {&#10;    Column(&#10;        modifier = Modifier.fillMaxSize().padding(24.dp),&#10;        verticalArrangement = Arrangement.spacedBy(12.dp),&#10;        horizontalAlignment = Alignment.CenterHorizontally&#10;    ) {&#10;        Text(&quot;Perfil&quot;)&#10;        Button(onClick = onOpenSecurity) { Text(&quot;Seguridad&quot;) }&#10;        Button(onClick = onOpenAppearance) { Text(&quot;Apariencia&quot;) }&#10;        OutlinedButton(onClick = onBack) { Text(&quot;Volver&quot;) }&#10;    }&#10;}&#10;&#10;@Composable&#10;fun BasicSecurityScreen(onBack: () -&gt; Unit) {&#10;    Column(&#10;        modifier = Modifier.fillMaxSize().padding(24.dp),&#10;        verticalArrangement = Arrangement.spacedBy(12.dp),&#10;        horizontalAlignment = Alignment.CenterHorizontally&#10;    ) {&#10;        Text(&quot;Configuración de Seguridad&quot;)&#10;        OutlinedButton(onClick = onBack) { Text(&quot;Volver&quot;) }&#10;    }&#10;}&#10;&#10;@Composable&#10;fun BasicAppearanceScreen(onBack: () -&gt; Unit) {&#10;    Column(&#10;        modifier = Modifier.fillMaxSize().padding(24.dp),&#10;        verticalArrangement = Arrangement.spacedBy(12.dp),&#10;        horizontalAlignment = Alignment.CenterHorizontally&#10;    ) {&#10;        Text(&quot;Configuración de Apariencia&quot;)&#10;        OutlinedButton(onClick = onBack) { Text(&quot;Volver&quot;) }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>