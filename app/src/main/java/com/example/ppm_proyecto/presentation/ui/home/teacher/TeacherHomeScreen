package com.example.ppm_proyecto.presentation.ui.home.teacher

import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.Card
import androidx.compose.material3.CardDefaults
import androidx.compose.material3.Icon
import androidx.compose.material3.IconButton
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.remember
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.ppm_proyecto.R
import com.example.ppm_proyecto.presentation.navigation.routes.*

@Composable
fun TeacherHomeScreen(navigate: (AppDestination) -> Unit) {
    // Simulando datos por ahora
    val nombreMaestro = "Ana Castillo"
    val notificaciones = listOf(
        "Revisión pendiente del curso de Móvil",
        "Recordatorio: entrega de notas mañana"
    )
    val cursos = listOf("Álgebra", "Cálculo I", "Programación I", "Física II")

    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(16.dp)
    ) {
        // Header
        Header(
            nombreUsuario = nombreMaestro,
            navigate = navigate,
            onNavMenuClick = { /* Barra lateral */ } //Modificar para la navegación
        )

        Spacer(modifier = Modifier.height(16.dp))

        // Sección de Notificaciones
        Text(
            text = "Notificaciones",
            fontSize = 20.sp,
            fontWeight = FontWeight.SemiBold,
            modifier = Modifier.padding(bottom = 8.dp)
        )

        LazyColumn(
            modifier = Modifier
                .fillMaxWidth()
                .height(120.dp)
        ) {
            items(notificaciones) { noti ->
                Card(
                    modifier = Modifier
                        .fillMaxWidth()
                        .padding(vertical = 4.dp),
                    shape = RoundedCornerShape(12.dp),
                    colors = CardDefaults.cardColors(
                        containerColor = MaterialTheme.colorScheme.surfaceVariant
                    )
                ) {
                    Text(
                        text = noti,
                        modifier = Modifier.padding(12.dp),
                        fontSize = 16.sp
                    )
                }
            }
        }

        Spacer(modifier = Modifier.height(24.dp))

        // Sección de Cursos
        Text(
            text = "Mis Cursos",
            fontSize = 20.sp,
            fontWeight = FontWeight.SemiBold,
            modifier = Modifier.padding(bottom = 8.dp)
        )

        LazyColumn(
            modifier = Modifier
                .fillMaxWidth()
                .weight(1f) 
        ) {
            items(cursos) { curso ->
                CardCurso(nombreCurso = curso)
            }
        }
    }
}

//Para la Card de cada curso
@Composable
fun CardCurso(nombreCurso: String) {
    Card(
        modifier = Modifier
            .fillMaxWidth()
            .padding(vertical = 6.dp),
        shape = RoundedCornerShape(16.dp),
        elevation = CardDefaults.cardElevation(defaultElevation = 2.dp),
        colors = CardDefaults.cardColors(
            containerColor = MaterialTheme.colorScheme.primaryContainer
        )
    ) {
        Text(
            text = nombreCurso,
            fontSize = 18.sp,
            fontWeight = FontWeight.Medium,
            modifier = Modifier.padding(16.dp)
        )
    }
}

